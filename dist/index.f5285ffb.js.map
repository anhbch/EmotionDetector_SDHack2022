{"mappings":"AAAA,IAAIA,WAAa,KAEjB,SAASC,WAAWC,EAAUC,GAC1B,IAAsBC,EAASC,EAA3BC,EAAQJ,EACZF,WAAaO,aAAY,WACrBH,EAAUI,SAASF,EAAQ,GAAI,IAC/BD,EAAUG,SAASF,EAAQ,GAAI,IAE/BF,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzCC,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EAEzCF,EAAQM,YAAcL,EAAU,IAAMC,IAOhCC,EAAQ,IACVA,EAAQ,GAGE,IAAVA,GAEAI,cAAcJ,KAKnB,KAGP,SAASK,QAGLV,WAFW,GACDW,SAASC,cAAc,WAIrC,SAASC,QACLJ,cAAcV,YACdY,SAASG,eAAe,SAASC,UAAYJ,SAASC,cAAc,UACpEV,QAAUS,SAASC,cAAc,UACjCZ,WAAWgB,KAAMd,SAGrB,SAASe,QACLR,cAAcV,YACdY,SAASG,eAAe,SAASC,UAAY,QAIjD,IAAIG,aAAe,CACfC,MAAO,EACPC,IAAK,EACLC,MAAO,GAEPC,mBAAqB,GACrBC,SAAW,GAKf,SAASC,gBAOL,IAAK,IAAIC,KANTP,aAAoB,MAAIQ,WAAWC,aAAaC,QAAQ,kBACxDV,aAAkB,IAAIQ,WAAWC,aAAaC,QAAQ,gBACtDV,aAAoB,MAAIQ,WAAWC,aAAaC,QAAQ,kBAIzCV,aACXK,SAASM,KAAK,CAACJ,EAAIP,aAAaO,KAMpC,OAJAF,SAASO,MAAK,SAASC,EAAGC,GACtB,OAAOD,EAAE,GAAKC,EAAE,MAEpBV,mBAAmBC,SAAS,GAAG,IAAMA,SAAS,GAAG,GAC1CD","sources":["public/timer.js"],"sourcesContent":["let myInterval = null;\n\nfunction startTimer(duration, display) {\n    var timer = duration, minutes, seconds;\n    myInterval = setInterval(function () {\n        minutes = parseInt(timer / 60, 10)\n        seconds = parseInt(timer % 60, 10);\n\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        display.textContent = minutes + \":\" + seconds;\n\n        // if (--timer < 0) {\n        //     timer = 0;\n        //     // timer = duration; // uncomment this line to reset timer automatically after reaching 0\n        // }\n        // timer--;\n        if (--timer < 0) {\n            timer = 0\n        }\n        // Need to update after calculate emotion\n        if (timer === 0) {\n            // alert('sorry, out of time');\n            clearInterval(timer);\n\n            //Call getDomEmotion\n            \n        }\n    }, 1000);\n};\n\nfunction start() {\n    var time = 10, // your time in seconds here\n    display = document.querySelector('#clock');\n    startTimer(time, display);\n};\n\nfunction pause() {\n    clearInterval(myInterval);\n    document.getElementById(\"clock\").innerHTML = document.querySelector('#clock');\n    display = document.querySelector('#clock');\n    startTimer(time, display);\n};\n\nfunction reset() {\n    clearInterval(myInterval);\n    document.getElementById(\"clock\").innerHTML = '30:00';\n};\n\n\nlet emotions_obj = {\n    happy: 0,\n    sad: 0,\n    angry: 0\n}\nlet dominating_emotion = {}\nlet sortable = []\n\n/**\n * Helper function to get data\n */\nfunction getDomEmotion(){\n    emotions_obj['happy'] = parseFloat(localStorage.getItem(\"overall_happy\"));\n    emotions_obj['sad'] = parseFloat(localStorage.getItem(\"overall_sad\"));\n    emotions_obj['angry'] = parseFloat(localStorage.getItem(\"overall_angry\"));\n    // emotions_obj['happy'] = 2\n    // emotions_obj['sad'] = 1\n    // emotions_obj['angry'] = 3\n    for (var el in emotions_obj) {\n        sortable.push([el, emotions_obj[el]]);\n    }\n    sortable.sort(function(a, b) {\n        return a[1] - b[1];\n    });\n    dominating_emotion[sortable[2][0]] = sortable[2][1];\n    return dominating_emotion;\n}\n\n\n"],"names":["myInterval","startTimer","duration","display","minutes","seconds","timer","setInterval","parseInt","textContent","clearInterval","start","document","querySelector","pause","getElementById","innerHTML","time","reset","emotions_obj","happy","sad","angry","dominating_emotion","sortable","getDomEmotion","el","parseFloat","localStorage","getItem","push","sort","a","b"],"version":3,"file":"index.f5285ffb.js.map"}